解决传递中文问题
上一个版本中,我们知道如何通过页面form表单提交数据.当我们使用GET形式提交数据时,数据会被包含在URL中对
请求发送过来.而此时数据会体现在请求行的抽象路径部分.
由于HTTP协议要求,请求的请求行和消息头是字符串,并且使用的字符集为ISO8859-1,这是一个欧洲的字符集,因此
这部分的内容不能直接出现中文(通常只会使用英文,数字,符号).

解决办法
1:浏览器会先将中文内容按照页面指定的字符集(页面中head里<meta charset="UTF-8">这里指定)将提交的中文
  内容转换为一组字节
2:将每个字节以2位16进制形式表示
3:将每个字节对应的2位16进制前面加上%,用于表明这是一个16进制形式的1字节内容(URL规定的格式)
  从而传递给服务端
4:服务端只需要将这些%XX内容反向解析即可得到中文.
注:由于16进制对应的字符为:0-9 A-F 这些是ISO8859-1支持的字符,所以用这样的方式传递中文.


例如:注册时,用户名输入:范传奇
浏览器会先将"范传奇"按照UTF-8转换为9个字节

二进制     十进制     十六进制
0000        0           0
0001        1           1
0010        2           2
0011        3           3
0100        4           4
0101        5           5
0110        6           6
0111        7           7
1000        8           8
1001        9           9
1010        10          A
1011        11          B
1100        12          C
1101        13          D
1110        14          E
1111        15          F

2位16进制就可以表示8位2进制
10101100  ->  AC

用2进制传递中文:
/myweb/regUser?username=100110101001101010011010100110101001101010011010100110101001101010011010&password=123&....
为了减少长度,因此2进制部分用16进制表示
/myweb/regUser?username=E88C83E4BCA0E5A587&password=123&....
为了与实际数据中的英文数字组合区分.因此凡是16进制的内容前面要添加一个%
/myweb/regUser?username=%E8%8C%83%E4%BC%A0%E5%A5%87&password=123&....



支持POST形式的表单提交
form表单上如果method属性的值为post，则表单提交后，输入框中输入的内容体现在请求的消息正文中。
实际上此时消息获赠问中的内容还是文字，并且格式与get形式提交时，抽象路径中？右侧内容的格式是一致的。


实现：
完成HttpRequest中解析消息正文的方法.


